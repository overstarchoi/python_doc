pythonGuide

문자열 포매팅
숫자 대입
>>> 'I eat %d apples.' %3
'I eat 3 apples.'

문자열 대입
>>> 'I eat %s apples.' %'five'
'I eat five apples.'

숫자 변수 대입
>>> number = 3
>>> 'I eat %d apples.' %number
'I eat 3 apples.'

2개 이상 값 넣기
>>> number = 3
>>> day = 'three'
>>> 'I ate %d apples. so I was sick for %s days.' %(number,day)
'I ate 3 apples. so I was sick for three days.'

포맷 코드
>>> '%10s' %'hi'
'        hi' # 총 10칸에서 오른쪽 정렬

>>> '%-10sjane' %'hi'
'hi        jane' # 총 10칸에서 왼쪽 정렬, 그 후 다음 문자 'jane'

>>> '%0.4f' %3.42134234
'3.4213' # 소수점 4자리까지 표현. 이때 반올림.

>>> '%.4f' %3.42134234
'3.4213' # 0은 생략할 수 있다.

>>> '%10.4f' %3.42134234
'    3.4213' # 총 10칸에서 오른쪽 정렬.

format 함수를 사용한 포매팅
숫자 바로 대입하기
>>> 'I eat {0} apples.'.format(3)
'I eat 3 apples.'

문자열 바로 대입하기
>>> 'I eat {0} apples.'.format('five')
'I eat five apples.'

숫자 변수 대입하기
>>> number = 3
>>> 'I eat {0} apples.'.format(number)
'I eat 3 apples.'

2개 이상 값 넣기
>>> number = 10
>>> day = 'three'
>>> 'I ate {0} apples. so I was sick for {1} days.'.format(number,day)
'I ate 3 apples. so I was sick for three days.'

이름으로 넣기
>>> 'I ate {number} apples. so I was sick for {day} days.'.format(number=10,day=3)
'I ate 10 apples. so I was sick for 3 days.'

인덱스와 이름 혼용해서 넣기
>>> 'I ate {0} apples. so I was sick for {day} days.'.format(10,day='three')
'I ate 10 apples. so I was sick for three days.'

왼쪽 정렬
>>> '{0:<10}'.format('hi') # 0:인덱스는 0, <:왼쪽정렬, 10:총10칸.
'hi        ' # 총 10칸에서 왼쪽 정렬

오른쪽 정렬
>>> '{0:>10}'.format('hi') # >:오른쪽 정렬.
'        hi' # 총 10칸에서 오른쪽 정렬

가운데 정렬
>>> '{0:^10}'.format('hi') # ^:가운데 정렬.
'    hi    ' # 총 10칸에서 가운데 정렬

공백 채우기
>>> '{0:=<10}'.format('hi')
'hi========' # 총 10칸에서 왼쪽 정렬. 나머지는 = 로 채움.
>>> '{0:=^10}'.format('hi')
'====hi====' # 총 10칸에서 가운데 정렬. 나머지는 = 로 채움.
>>> '{0:!>10}'.format('hi')
'!!!!!!!!hi' # 총 10칸에서 오른쪽 정렬. 나머지는 ! 로 채움.

소수점 표현하기
>>> y = 3.42134234
>>> '{0:0.4f}'.format(y)
'3.4213'
>>> '{0:10.4f}'.format(y)
'    3.4213' # 총 10칸에서 오른쪽 정렬.

중괄호('{','}') 문자 표현하기
# 다음과 같이 중괄호를 두번 연속 사용하면 된다.
>>> '{{and}}'.format()
'{and}'

f 문자열 포매팅
# 파이썬 3.6 버전부터 사용 가능. 3.6 미만에서는 사용할 수 없음.
# 그러니 왠만하면 사용하지 말자.
>>> name = '홍길동'
>>> age = 30
>>> f'나의 이름은 {name}입니다. 나이는 {age}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'
>>> f'나는 내년이면 {age+1}살이 된다.'
'나는 내년이면 31살이 된다.'
>>> d = {'name':'홍길동','age':30}
>>> f'나의 이름은 {d['name']}입니다. 나이는 {d['age']}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'
# 귀찮다. 위에 다른것들이랑 비슷하다.

문자열 내장 함수
문자 개수 세기 - count
>>> a = 'hobby'
>>> a.count('b') #문자열 중 문자 'b'의 개수를 반환한다.
2

위치 알려주기 - find
>>> a = 'Python is the best choice'
>>> a.find('b')
14
# 문자열에서 'b'가 처음 나온 위치. 'b'가 여러개 있어도 첫번째 위치만 반환.
# find()인 경우 해당 문자가 없으면 -1을 반환.

위치 알려주기 - index
>>> a = 'Life is too short'
>>> a.index('L')
0
# find()와 동일. 다른 점은 index() 경우 해당 문자가 없으면 오류가 발생한다.

문자열 삽입 - join
>>> ','.join('abcd')
'a,b,c,d'
>>> ','.join(['a','b','c','d'])
'a,b,c,d'
>>> ''.join(['a','b','c','d'])
'abcd'

소문자를 대문자로 변환 - upper
>>> a = 'hi'
>>> a.upper()
'HI'

대문자를 소문자로 변환 - lower
>>> a = 'HI'
>>> a.lower()
'hi'

왼쪽 공백 지우기 - lstrip
>>> a = ' hi '
>>> a.lstrip()
'hi '

오른쪽 공백 지우기 - rstrip
>>> a = ' hi '
>>> a.rstrip()
' hi'

양쪽 공백 지우기 - strip
>>> a = ' hi '
>>> a.strip()
'hi'

문자열 바꾸기 - replace
>>> a = 'Life is too short'
>>> a.replace('Life','Your leg')
'Your leg is too short'

문자열 나누기 - split
>>> a = 'Life is too short'
>>> a.split() # 아무 문자도 없으면 공백,탭,엔터로 구분한다.
['Life', 'is', 'too', 'short']
>>> b = 'a:b:c:d'
>>> b.split(':')
['a','b','c','d']
